#!/bin/bash

scriptDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "${scriptDir}/utils.sh"

scriptName="$(basename "$0")"

# NOTE: This requires GNU getopt.  On Mac OS X and FreeBSD, you have to install this separately
PARSED="$(getopt --options vdi --long "verbose,debug,install" -n "$scriptName" -- "$@")"
if [ $? != 0 ] ; then
	log "getopt has complained about wrong arguments to stdout"
	echo "Terminating..." >&2
	exit 1
fi
eval set -- "$PARSED"

_VERBOSE=0
_DEBUG=0
_INSTALL=0
while true; do
	case "$1" in
		-v | --verbose ) _VERBOSE=1; shift ;;
		-d | --debug ) _DEBUG=1; shift ;;
		-i | --install ) _INSTALL=1; shift ;;
		-- ) shift; break ;;
		* ) break ;;
	esac
done
filename="$1"

if [[ $_INSTALL -eq 1 ]]; then
	getPackages "gnumeric"
	exit
fi

log "File to convert: $filename"

# LibreOffice solution
# Workaround for CLI calls to avoid using the running instance of LibreOffice
# Ref: https://bugs.documentfoundation.org/show_bug.cgi?id=37531
#filenameNoPath="${filename##*/}"
#filenameNoExt="${filenameNoPath%.*}"
#tempdir="$(mktemp -d)"
#tempfile="${tempdir}/${filenameNoExt}.csv"
#log "Temp CSV directory: $tempdir"
#log "Temp file: $tempfile"
#libreEnvTempdir="$(mktemp -d --suffix=.libreoffice-alt)"
#libreEnvWorkaround="-env:UserInstallation=file://${libreEnvTempdir}"
#libreoffice "$libreEnvWorkaround" --headless --convert-to csv --outdir "$tempdir" "$filename" 2>&1 | log
#cat "$tempfile"

# Gnumeric solution printing sheet name.
# Doesn't work with spaces or dashes in sheet names.
#sheetNames="$(unzip -p "$filename" content.xml | grep -oP '(?<=table:name=")[a-zA-Z0-9 ]+(?=")')"
#IFS=$'\n' # make newlines the only separator
#for sheetName in $sheetNames; do
#	echo "Sheetname: $sheetName"
#	ssconvert --export-options="sheet=${sheetName}" --export-type=Gnumeric_stf:stf_assistant "$filename" fd://0 2>&-
#done
#unset IFS

# Gnumeric solution
# Output directed to stdout. Note the %d appears to just be truncated.
sheetNames="$(unzip -p "$filename" content.xml | grep -oP '(?<=table:name=")[a-zA-Z0-9 ]+(?=")')"
IFS=$'\n' # make newlines the only separator
printf "Sheetnames:"
for sheetName in $sheetNames; do
	printf " %s;" "$sheetName"
done
unset IFS
printf "\n"

ssconvert -S --export-type=Gnumeric_stf:stf_csv "$filename" fd://1%d 2> >(log)
# Note: possible way to get more options for export: ssconvert -O 'separator=; format=raw' samples/excel/statfuns.xls statfuns.txt
# Note: obsolete way to dump plaintext: ssconvert -S --export-type=Gnumeric_stf:stf_assistant "$filename" fd://1%d 2> >(log)

# Cleanup
#cleanup () {
#  rm -rf "$tempdir"
#  rm -rf "$libreEnvTempdir"
#}
#trap cleanup EXIT
