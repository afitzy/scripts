#!/bin/bash

scriptName="$(basename "$0")"
dateStamp=$(date --iso-8601="seconds")

PARSED="$(getopt --options vdo: --long "verbose,debug,start:,stop:,width:,framesRate:,outputRateScalar:" -n "$scriptName" -- "$@")"
if [ $? != 0 ] ; then
	log "getopt has complained about wrong arguments to stdout"
	echo "Terminating..." >&2
	exit 1
fi
eval set -- "$PARSED"

_INTERACTIVE=1
_VERBOSE=0
_DEBUG=0
outputDir=resized
scaleWidth=250
framesPerSec=10
presentationRate=PTS

while true; do
	case "$1" in
		-v | --verbose ) _VERBOSE=1; shift ;;
		-d | --debug ) _DEBUG=1; shift ;;
		--start ) timeStart="$2"; shift 2 ;; # Format: 00:01:00
		--stop ) timeStop="$2"; shift 2 ;; # Format: 00:01:00
		--width ) scaleWidth="$2"; shift 2 ;;
		--framesRate ) framesPerSec="$2"; shift 2 ;;
		--outputRateScalar ) presentationRate="PTS*${2}"; shift 2;;
		-- ) shift; break ;;
		* ) break ;;
	esac
done

# Positional arguments
fileIn="${@:$OPTIND:1}"; shift;



# References:
# https://askubuntu.com/questions/648603/how-to-create-an-animated-gif-from-mp4-video-via-command-line
# https://superuser.com/questions/268985/remove-audio-from-video-file-with-ffmpeg

cropTopLeftPointX=0
cropTopLeftPointY=0
cropOutWidth=in_w
cropOutHeight=in_h

ffmpeg \
	-i "$fileIn" \
	-ss "$timeStart" \
	-to "$timeStop" \
	-filter:v "deshake, crop=w=${cropOutWidth}:h=${cropOutHeight}:x=${cropTopLeftPointX}:y=${cropTopLeftPointY}, scale=${scaleWidth}:-2, setsar=1, setpts=${presentationRate}, fps=fps=${framesPerSec}" \
	-f image2pipe \
	-vcodec ppm \
	-an \
	- | convert \
		-delay 5 \
		-loop 0 \
		-layers Optimize \
		- out.gif
