#!/usr/bin/python

"""
Writes git issues to a file with a header.
Requires GitHub-hub to be installed.
"""
import argparse
import datetime as dt
import subprocess

def parseIssue(issue, escapeChar, delimiterIn, delimiterOut):
	# Escape all quotation marks by using twice as many
	# Ref: https://forum.openoffice.org/en/forum/viewtopic.php?f=9&t=56517
	line = issue.replace(escapeChar, escapeChar * 2)

	# Insert desired escape characters
	line = ["{esc}{txt}{esc}".format(esc=escapeChar, txt=x) for x in line.split(delimiterIn)]
	return delimiterOut.join(line)



if __name__ == '__main__':
	datestamp = dt.datetime.today().strftime("%Y%m%d-%H%M%S")

	p = argparse.ArgumentParser()
	p.add_argument("--escapeChar", default='\"')
	p.add_argument("--delimiterIn", default='\xFF')
	p.add_argument("--delimiterOut", default=',')
	p.add_argument("--hubArgs", default=None)
	p.add_argument("--output", default='gitIssues_{}.csv'.format(datestamp))
	args, argsUnknown = p.parse_known_args()

	issueHdr = 'Num{d}Title{d}State{d}Tags{d}URL{d}Milestone{d}Timestamp{d}Assignees'.format(d=args.delimiterOut)
	issueFrmt = '%I{d}%t{d}%S{d}%l{d}%U{d}%Mt{d}%uI{d}%as%n'.format(d=args.delimiterIn)

	issueCmd = ['hub', 'issue', '-f', issueFrmt]
	issueCmd.extend(argsUnknown)
	issues = subprocess.check_output(issueCmd, stdin=None, stderr=None, shell=False, universal_newlines=False)

	with open(args.output,"wb") as f:
		f.write(issueHdr + '\n')
		for issue in issues.split('\n'):
			parsed = parseIssue(issue, escapeChar=args.escapeChar, delimiterIn=args.delimiterIn, delimiterOut=args.delimiterOut)
			f.write(parsed + '\n')
